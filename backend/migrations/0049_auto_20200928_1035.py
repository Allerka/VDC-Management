# Generated by Django 3.0.7 on 2020-09-28 14:35

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0048_auto_20200925_1459'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='historicalemissions',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='historicalemissions',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalrequester',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='historicalrequester',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalroadload',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='historicalroadload',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalsoaktag',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='historicalsoaktag',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalvehicleinfo',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='historicalvehicleinfo',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='requester',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='roadload',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='soaktag',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='changed_by',
        ),
        migrations.RemoveField(
            model_name='datahandler',
            name='emissions',
        ),
        migrations.RemoveField(
            model_name='datahandler',
            name='requester',
        ),
        migrations.RemoveField(
            model_name='datahandler',
            name='road_load',
        ),
        migrations.RemoveField(
            model_name='datahandler',
            name='soak_tag',
        ),
        migrations.RemoveField(
            model_name='datahandler',
            name='vehicle_info',
        ),
        migrations.RemoveField(
            model_name='historicaldatahandler',
            name='emissions',
        ),
        migrations.RemoveField(
            model_name='historicaldatahandler',
            name='requester',
        ),
        migrations.RemoveField(
            model_name='historicaldatahandler',
            name='road_load',
        ),
        migrations.RemoveField(
            model_name='historicaldatahandler',
            name='soak_tag',
        ),
        migrations.RemoveField(
            model_name='historicaldatahandler',
            name='vehicle_info',
        ),
        migrations.AddField(
            model_name='datahandler',
            name='all_range',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='All-electric range'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cat_mid',
            field=models.BooleanField(default=False, verbose_name='Catalyst Midbed'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cert_level',
            field=models.CharField(blank=True, choices=[('bin2', 'EPA Tier 2 Bin 2 (2004)'), ('bin3', 'EPA Tier 2 Bin 3 (2004)'), ('bin4', 'EPA Tier 2 Bin 4 (2004)'), ('bin5', 'EPA Tier 2 Bin 5 (2004)'), ('bin5_int', 'EPA Tier 2 Bin 5 Int (2004)'), ('bin6', 'EPA Tier 2 Bin 6 (2004)'), ('bin6_int', 'EPA Tier 2 Bin 6 Int (2004)'), ('bin7', 'EPA Tier 2 Bin 7 (2004)'), ('bin7_int', 'EPA Tier 2 Bin 7 Int (2004)'), ('bin8', 'EPA Tier 2 Bin 8 (2004)'), ('bin8_int', 'EPA Tier 2 Bin 8 Int'), ('bin20', 'EPA Tier 3 Bin 20 (2017)'), ('bin30', 'EPA Tier 3 Bin 30 (2017)'), ('bin50', 'EPA Tier 3 Bin 50 (2017)'), ('bin70', 'EPA Tier 3 Bin 70 (2017)'), ('bin125', 'EPA Tier 3 Bin 125 (2017)'), ('bin160', 'EPA Tier 3 Bin 160 (2017)'), ('e3_cl_m1', 'Cl Class M1 (2000)'), ('e3_cl_n1_1', 'CL Class N1_I (2000)'), ('e3_cl_n1_2', 'CL Class N1_II (2000)'), ('e3_cl_n1_3', 'CL Class N1_III (2000)'), ('e3_pl_m1', 'Pl Class M1 (2000)'), ('e3_pl_n1_1', 'PL Class N1_I (2000)'), ('e3_pl_n1_2', 'PL Class N1_II (2000)'), ('e3_pl_n1_3', 'PL Class N1_III (2000)'), ('e4_cl_m1', 'Cl Class M1 (2005)'), ('e4_cl_n1_1', 'CL Class N1_I (2005)'), ('e4_cl_n1_2', 'CL Class N1_II (2005)'), ('e4_cl_n1_3', 'CL Class N1_III (2005)'), ('e4_pl_m1', 'PL Class M1 (2005)'), ('e4_pl_n1_1', 'PL Class N1_I (2005)'), ('e4_pl_n1_2', 'PL Class N1_II (2005)'), ('e4_pl_n1_3', 'PL Class N1_III (2005)'), ('5a_cl_mn1_1', '5a Cl Class M N1_I (2009)'), ('5a_cl_n1_2', '5a CL Class N1_II (2009)'), ('5a_cl_n1_3_n2', '5a CL Class N1_III N2 (2009)'), ('5a_sl_mn1_1', '5a Sl Class M N1_I (2009)'), ('5a_sl_n1_2', '5a SL Class N1_II (2009)'), ('5a_sl_n1_3_n2', '5a SL Class N1_III N2 (2009)'), ('5b_cl_mn1_1', '5b Cl Class M N1_I (2011)'), ('5b_cl_n1_2', '5b CL Class N1_II (2011)'), ('5b_cl_n1_3_n2', '5b CL Class N1_III N2 (2011)'), ('5b_sl_mn1_1', '5b Sl Class M N1_I (2011)'), ('5b_sl_n1_2', '5b SL Class N1_II (2011)'), ('5b_sl_n1_3_n2', '5b SL Class N1_III N2 (2011)'), ('6a_cl_mn1_1', '6a Cl Class M N1_I (2014)'), ('6a_cl_n1_2', '6a CL Class N1_II (2014)'), ('6a_cl_n1_3_n2', '6a CL Class N1_III N2 (2014)'), ('6a_sl_mn1_1', '6a Sl Class M N1_I (2014)'), ('6a_sl_n1_2', '6a SL Class N1_II (2014)'), ('6a_sl_n1_3_n2', '6a SL Class N1_III N2 (2014)'), ('None', 'None')], max_length=15, verbose_name='Certification'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='charge_num',
            field=models.CharField(blank=True, max_length=30, verbose_name='Complete project/charge #'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='coastdown',
            field=models.CharField(choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Coastdown mode?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='coeff1',
            field=models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=10, verbose_name='Target coeff A'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='coeff2',
            field=models.DecimalField(blank=True, decimal_places=6, default=0, max_digits=10, verbose_name='Target coeff B'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='coeff3',
            field=models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=10, verbose_name='Target coeff C'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cold_co1',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='Cold Target Coeff A'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cold_co2',
            field=models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=10, verbose_name='Cold Target Coeff B'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cold_co3',
            field=models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=10, verbose_name='Cold Target Coeff C'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='color',
            field=models.CharField(blank=True, max_length=20, verbose_name='Exterior Color'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='country',
            field=models.CharField(blank=True, choices=[('US', 'Us'), ('USM', 'US Metric'), ('EU', 'Eu'), ('GTR', 'GTR 15'), ('JPN', 'Japan 1015'), ('JC08', 'Japan JC08'), ('None', 'None')], default='', max_length=10, verbose_name='Country selection'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cscm',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='CSCm Distance'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='customer',
            field=models.CharField(blank=True, max_length=50, verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='cylinders',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Number of cylinders'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='d_rings',
            field=models.BooleanField(default=False, verbose_name='D-Rings present?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='desc',
            field=models.CharField(blank=True, max_length=255, verbose_name='Additional notes'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='displacement',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, verbose_name='Engine Displacement'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='dyno_mode',
            field=models.CharField(blank=True, choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='No', max_length=10, verbose_name='Dyno mode?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='dyno_roll',
            field=models.CharField(choices=[('FWD', 'Fwd'), ('RWD', 'Rwd'), ('4WD', 'Awd'), ('', 'None')], default='', max_length=3, verbose_name='Dyno roll configuration'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='emi_family',
            field=models.CharField(blank=True, max_length=100, verbose_name='Emission family'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='eng_family',
            field=models.CharField(blank=True, max_length=100, verbose_name='Engine family'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='eng_out',
            field=models.BooleanField(default=False, verbose_name='Engine out/Feedgas/Precat'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='f_pressure',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Front tire pressure'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='front_alt',
            field=models.CharField(blank=True, max_length=50, verbose_name='Alternate front tie-down'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='front_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Front tow hooks?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='fuel_cap',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, verbose_name='Fuel capacity'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='fuel_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='VDC fuel type'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='fuel_type_other',
            field=models.CharField(blank=True, max_length=50, verbose_name='Other fuel type'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='gears',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Number of gears'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='identifier',
            field=models.CharField(blank=True, max_length=50, verbose_name='Additional Naming'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='inertia',
            field=models.BooleanField(default=False, verbose_name='Inertia table lookup?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='license',
            field=models.CharField(blank=True, max_length=10, verbose_name='Vehicle license #'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='make',
            field=models.CharField(blank=True, max_length=50, verbose_name='Make '),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='marmon',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=2, verbose_name='Marmon flange size'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='marmon_distance',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Dual flange distance'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='mass_coc',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mass #13 - 75kg'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='mass_ro',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='MassRO'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='mass_usa',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mass (EPA)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='model',
            field=models.CharField(blank=True, max_length=50, verbose_name='Model '),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='nom_bat',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Nominal battery voltage'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='r_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name="Requester's e-mail"),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='r_mobile',
            field=models.CharField(blank=True, max_length=12, verbose_name="Requester's mobile (if different)"),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='r_name',
            field=models.CharField(default=0, max_length=50, verbose_name='Name of requester'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='r_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Requester's phone number"),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='r_pressure',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Rear tire pressure'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='rear_alt',
            field=models.CharField(blank=True, max_length=50, verbose_name='Alternate rear tie-down'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='rear_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Rear tow hooks?'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='regulation',
            field=models.CharField(blank=True, choices=[('86', 'CFR 86'), ('1066', 'CFR 1066'), ('E3', 'Euro 3 (2000)'), ('E4', 'Euro 4 (2005)'), ('E5', 'Euro 5 (2009)'), ('E6b', 'Euro 6b (2014)'), ('E6c', 'Euro 6c'), ('E6d_T', 'Euro 6d TEMP (2017)'), ('E6d', 'Euro 6d (2020)'), ('None', 'None')], max_length=5, verbose_name='Regulation'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='t_email',
            field=models.EmailField(blank=True, max_length=50, verbose_name="Tester's e-mail"),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='t_name',
            field=models.CharField(blank=True, max_length=50, verbose_name='Name of testing engineer'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='t_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Tester's phone number"),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='tail_post',
            field=models.BooleanField(default=False, verbose_name='Tailpipe/Postcat'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='test_mass_eu',
            field=models.DecimalField(blank=True, decimal_places=6, default=0, max_digits=12, verbose_name='Test mass (EU)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='test_mass_usa',
            field=models.DecimalField(blank=True, decimal_places=8, default=0, max_digits=12, verbose_name='Test mass (EPA)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='test_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Test Vehicle Naming'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='transmission',
            field=models.CharField(blank=True, max_length=10, verbose_name='Transmission type'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='usable_bat',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Usable battery energy'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='veh_type',
            field=models.CharField(blank=True, choices=[('ICE', 'Ice'), ('HEV (48V)', 'Hev 48'), ('HEV', 'Hev'), ('PHEV', 'Phev'), ('BEV', 'Bev'), ('None', 'None')], default='None', max_length=10, verbose_name='Vehicle type'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='vin',
            field=models.CharField(blank=True, max_length=17, verbose_name='Vehicle VIN'),
        ),
        migrations.AddField(
            model_name='datahandler',
            name='wheelbase',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Wheelbase size'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='datahandler',
            name='year',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Model Year'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='all_range',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='All-electric range'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cat_mid',
            field=models.BooleanField(default=False, verbose_name='Catalyst Midbed'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cert_level',
            field=models.CharField(blank=True, choices=[('bin2', 'EPA Tier 2 Bin 2 (2004)'), ('bin3', 'EPA Tier 2 Bin 3 (2004)'), ('bin4', 'EPA Tier 2 Bin 4 (2004)'), ('bin5', 'EPA Tier 2 Bin 5 (2004)'), ('bin5_int', 'EPA Tier 2 Bin 5 Int (2004)'), ('bin6', 'EPA Tier 2 Bin 6 (2004)'), ('bin6_int', 'EPA Tier 2 Bin 6 Int (2004)'), ('bin7', 'EPA Tier 2 Bin 7 (2004)'), ('bin7_int', 'EPA Tier 2 Bin 7 Int (2004)'), ('bin8', 'EPA Tier 2 Bin 8 (2004)'), ('bin8_int', 'EPA Tier 2 Bin 8 Int'), ('bin20', 'EPA Tier 3 Bin 20 (2017)'), ('bin30', 'EPA Tier 3 Bin 30 (2017)'), ('bin50', 'EPA Tier 3 Bin 50 (2017)'), ('bin70', 'EPA Tier 3 Bin 70 (2017)'), ('bin125', 'EPA Tier 3 Bin 125 (2017)'), ('bin160', 'EPA Tier 3 Bin 160 (2017)'), ('e3_cl_m1', 'Cl Class M1 (2000)'), ('e3_cl_n1_1', 'CL Class N1_I (2000)'), ('e3_cl_n1_2', 'CL Class N1_II (2000)'), ('e3_cl_n1_3', 'CL Class N1_III (2000)'), ('e3_pl_m1', 'Pl Class M1 (2000)'), ('e3_pl_n1_1', 'PL Class N1_I (2000)'), ('e3_pl_n1_2', 'PL Class N1_II (2000)'), ('e3_pl_n1_3', 'PL Class N1_III (2000)'), ('e4_cl_m1', 'Cl Class M1 (2005)'), ('e4_cl_n1_1', 'CL Class N1_I (2005)'), ('e4_cl_n1_2', 'CL Class N1_II (2005)'), ('e4_cl_n1_3', 'CL Class N1_III (2005)'), ('e4_pl_m1', 'PL Class M1 (2005)'), ('e4_pl_n1_1', 'PL Class N1_I (2005)'), ('e4_pl_n1_2', 'PL Class N1_II (2005)'), ('e4_pl_n1_3', 'PL Class N1_III (2005)'), ('5a_cl_mn1_1', '5a Cl Class M N1_I (2009)'), ('5a_cl_n1_2', '5a CL Class N1_II (2009)'), ('5a_cl_n1_3_n2', '5a CL Class N1_III N2 (2009)'), ('5a_sl_mn1_1', '5a Sl Class M N1_I (2009)'), ('5a_sl_n1_2', '5a SL Class N1_II (2009)'), ('5a_sl_n1_3_n2', '5a SL Class N1_III N2 (2009)'), ('5b_cl_mn1_1', '5b Cl Class M N1_I (2011)'), ('5b_cl_n1_2', '5b CL Class N1_II (2011)'), ('5b_cl_n1_3_n2', '5b CL Class N1_III N2 (2011)'), ('5b_sl_mn1_1', '5b Sl Class M N1_I (2011)'), ('5b_sl_n1_2', '5b SL Class N1_II (2011)'), ('5b_sl_n1_3_n2', '5b SL Class N1_III N2 (2011)'), ('6a_cl_mn1_1', '6a Cl Class M N1_I (2014)'), ('6a_cl_n1_2', '6a CL Class N1_II (2014)'), ('6a_cl_n1_3_n2', '6a CL Class N1_III N2 (2014)'), ('6a_sl_mn1_1', '6a Sl Class M N1_I (2014)'), ('6a_sl_n1_2', '6a SL Class N1_II (2014)'), ('6a_sl_n1_3_n2', '6a SL Class N1_III N2 (2014)'), ('None', 'None')], max_length=15, verbose_name='Certification'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='charge_num',
            field=models.CharField(blank=True, max_length=30, verbose_name='Complete project/charge #'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='coastdown',
            field=models.CharField(choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Coastdown mode?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='coeff1',
            field=models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=10, verbose_name='Target coeff A'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='coeff2',
            field=models.DecimalField(blank=True, decimal_places=6, default=0, max_digits=10, verbose_name='Target coeff B'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='coeff3',
            field=models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=10, verbose_name='Target coeff C'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cold_co1',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, verbose_name='Cold Target Coeff A'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cold_co2',
            field=models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=10, verbose_name='Cold Target Coeff B'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cold_co3',
            field=models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=10, verbose_name='Cold Target Coeff C'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='color',
            field=models.CharField(blank=True, max_length=20, verbose_name='Exterior Color'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='country',
            field=models.CharField(blank=True, choices=[('US', 'Us'), ('USM', 'US Metric'), ('EU', 'Eu'), ('GTR', 'GTR 15'), ('JPN', 'Japan 1015'), ('JC08', 'Japan JC08'), ('None', 'None')], default='', max_length=10, verbose_name='Country selection'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cscm',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='CSCm Distance'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='customer',
            field=models.CharField(blank=True, max_length=50, verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='cylinders',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Number of cylinders'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='d_rings',
            field=models.BooleanField(default=False, verbose_name='D-Rings present?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='desc',
            field=models.CharField(blank=True, max_length=255, verbose_name='Additional notes'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='displacement',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, verbose_name='Engine Displacement'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='dyno_mode',
            field=models.CharField(blank=True, choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='No', max_length=10, verbose_name='Dyno mode?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='dyno_roll',
            field=models.CharField(choices=[('FWD', 'Fwd'), ('RWD', 'Rwd'), ('4WD', 'Awd'), ('', 'None')], default='', max_length=3, verbose_name='Dyno roll configuration'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='emi_family',
            field=models.CharField(blank=True, max_length=100, verbose_name='Emission family'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='eng_family',
            field=models.CharField(blank=True, max_length=100, verbose_name='Engine family'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='eng_out',
            field=models.BooleanField(default=False, verbose_name='Engine out/Feedgas/Precat'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='f_pressure',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Front tire pressure'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='front_alt',
            field=models.CharField(blank=True, max_length=50, verbose_name='Alternate front tie-down'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='front_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Front tow hooks?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='fuel_cap',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=4, verbose_name='Fuel capacity'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='fuel_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='VDC fuel type'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='fuel_type_other',
            field=models.CharField(blank=True, max_length=50, verbose_name='Other fuel type'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='gears',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Number of gears'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='identifier',
            field=models.CharField(blank=True, max_length=50, verbose_name='Additional Naming'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='inertia',
            field=models.BooleanField(default=False, verbose_name='Inertia table lookup?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='license',
            field=models.CharField(blank=True, max_length=10, verbose_name='Vehicle license #'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='make',
            field=models.CharField(blank=True, max_length=50, verbose_name='Make '),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='marmon',
            field=models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=2, verbose_name='Marmon flange size'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='marmon_distance',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Dual flange distance'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='mass_coc',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mass #13 - 75kg'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='mass_ro',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='MassRO'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='mass_usa',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Mass (EPA)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='model',
            field=models.CharField(blank=True, max_length=50, verbose_name='Model '),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='nom_bat',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Nominal battery voltage'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='r_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name="Requester's e-mail"),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='r_mobile',
            field=models.CharField(blank=True, max_length=12, verbose_name="Requester's mobile (if different)"),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='r_name',
            field=models.CharField(default=0, max_length=50, verbose_name='Name of requester'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='r_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Requester's phone number"),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='r_pressure',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Rear tire pressure'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='rear_alt',
            field=models.CharField(blank=True, max_length=50, verbose_name='Alternate rear tie-down'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='rear_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Rear tow hooks?'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='regulation',
            field=models.CharField(blank=True, choices=[('86', 'CFR 86'), ('1066', 'CFR 1066'), ('E3', 'Euro 3 (2000)'), ('E4', 'Euro 4 (2005)'), ('E5', 'Euro 5 (2009)'), ('E6b', 'Euro 6b (2014)'), ('E6c', 'Euro 6c'), ('E6d_T', 'Euro 6d TEMP (2017)'), ('E6d', 'Euro 6d (2020)'), ('None', 'None')], max_length=5, verbose_name='Regulation'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='t_email',
            field=models.EmailField(blank=True, max_length=50, verbose_name="Tester's e-mail"),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='t_name',
            field=models.CharField(blank=True, max_length=50, verbose_name='Name of testing engineer'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='t_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Tester's phone number"),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='tail_post',
            field=models.BooleanField(default=False, verbose_name='Tailpipe/Postcat'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='test_mass_eu',
            field=models.DecimalField(blank=True, decimal_places=6, default=0, max_digits=12, verbose_name='Test mass (EU)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='test_mass_usa',
            field=models.DecimalField(blank=True, decimal_places=8, default=0, max_digits=12, verbose_name='Test mass (EPA)'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='test_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Test Vehicle Naming'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='transmission',
            field=models.CharField(blank=True, max_length=10, verbose_name='Transmission type'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='usable_bat',
            field=models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Usable battery energy'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='veh_type',
            field=models.CharField(blank=True, choices=[('ICE', 'Ice'), ('HEV (48V)', 'Hev 48'), ('HEV', 'Hev'), ('PHEV', 'Phev'), ('BEV', 'Bev'), ('None', 'None')], default='None', max_length=10, verbose_name='Vehicle type'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='vin',
            field=models.CharField(blank=True, max_length=17, verbose_name='Vehicle VIN'),
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='wheelbase',
            field=models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, verbose_name='Wheelbase size'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicaldatahandler',
            name='year',
            field=models.PositiveSmallIntegerField(default=0, verbose_name='Model Year'),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name='Emissions',
        ),
        migrations.DeleteModel(
            name='HistoricalEmissions',
        ),
        migrations.DeleteModel(
            name='HistoricalRequester',
        ),
        migrations.DeleteModel(
            name='HistoricalRoadLoad',
        ),
        migrations.DeleteModel(
            name='HistoricalSoakTag',
        ),
        migrations.DeleteModel(
            name='HistoricalVehicleInfo',
        ),
        migrations.DeleteModel(
            name='Requester',
        ),
        migrations.DeleteModel(
            name='RoadLoad',
        ),
        migrations.DeleteModel(
            name='SoakTag',
        ),
        migrations.DeleteModel(
            name='VehicleInfo',
        ),
    ]
