# Generated by Django 3.0.7 on 2020-09-17 14:14

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0031_auto_20200902_2044'),
    ]

    operations = [
        migrations.AlterField(
            model_name='datahandler',
            name='staff',
            field=models.BooleanField(default=True, verbose_name="Can 'is_staff' users (VDC team) see this vehicle?"),
        ),
        migrations.AlterField(
            model_name='datahandler',
            name='status',
            field=models.CharField(choices=[('SUBMIT', 'Submitted'), ('REJECT', 'Rejected'), ('PEND', 'Pending'), ('APPROVE', 'Approved')], default='SUBMIT', max_length=10, verbose_name='Current status of the vehicle entry'),
        ),
        migrations.AlterField(
            model_name='datahandler',
            name='superuser',
            field=models.BooleanField(default=True, verbose_name="Can 'superuser' (Admins) users see this vehicle?"),
        ),
        migrations.AlterField(
            model_name='emissions',
            name='cat_mid',
            field=models.BooleanField(default=False, verbose_name='Catalyst Midbed'),
        ),
        migrations.AlterField(
            model_name='emissions',
            name='cert_level',
            field=models.CharField(choices=[('bin2', 'EPA Tier 2 Bin 2 (2004)'), ('bin3', 'EPA Tier 2 Bin 3 (2004)'), ('bin4', 'EPA Tier 2 Bin 4 (2004)'), ('bin5', 'EPA Tier 2 Bin 5 (2004)'), ('bin5_int', 'EPA Tier 2 Bin 5 Int (2004)'), ('bin6', 'EPA Tier 2 Bin 6 (2004)'), ('bin6_int', 'EPA Tier 2 Bin 6 Int (2004)'), ('bin7', 'EPA Tier 2 Bin 7 (2004)'), ('bin7_int', 'EPA Tier 2 Bin 7 Int (2004)'), ('bin8', 'EPA Tier 2 Bin 8 (2004)'), ('bin8_int', 'EPA Tier 2 Bin 8 Int'), ('bin20', 'EPA Tier 3 Bin 20 (2017)'), ('bin30', 'EPA Tier 3 Bin 30 (2017)'), ('bin50', 'EPA Tier 3 Bin 50 (2017)'), ('bin70', 'EPA Tier 3 Bin 70 (2017)'), ('bin125', 'EPA Tier 3 Bin 125 (2017)'), ('bin160', 'EPA Tier 3 Bin 160 (2017)'), ('e3_cl_m1', 'Cl Class M1 (2000)'), ('e3_cl_n1_1', 'CL Class N1_I (2000)'), ('e3_cl_n1_2', 'CL Class N1_II (2000)'), ('e3_cl_n1_3', 'CL Class N1_III (2000)'), ('e3_pl_m1', 'Pl Class M1 (2000)'), ('e3_pl_n1_1', 'PL Class N1_I (2000)'), ('e3_pl_n1_2', 'PL Class N1_II (2000)'), ('e3_pl_n1_3', 'PL Class N1_III (2000)'), ('e4_cl_m1', 'Cl Class M1 (2005)'), ('e4_cl_n1_1', 'CL Class N1_I (2005)'), ('e4_cl_n1_2', 'CL Class N1_II (2005)'), ('e4_cl_n1_3', 'CL Class N1_III (2005)'), ('e4_pl_m1', 'PL Class M1 (2005)'), ('e4_pl_n1_1', 'PL Class N1_I (2005)'), ('e4_pl_n1_2', 'PL Class N1_II (2005)'), ('e4_pl_n1_3', 'PL Class N1_III (2005)'), ('5a_cl_mn1_1', '5a Cl Class M N1_I (2009)'), ('5a_cl_n1_2', '5a CL Class N1_II (2009)'), ('5a_cl_n1_3_n2', '5a CL Class N1_III N2 (2009)'), ('5a_sl_mn1_1', '5a Sl Class M N1_I (2009)'), ('5a_sl_n1_2', '5a SL Class N1_II (2009)'), ('5a_sl_n1_3_n2', '5a SL Class N1_III N2 (2009)'), ('5b_cl_mn1_1', '5b Cl Class M N1_I (2011)'), ('5b_cl_n1_2', '5b CL Class N1_II (2011)'), ('5b_cl_n1_3_n2', '5b CL Class N1_III N2 (2011)'), ('5b_sl_mn1_1', '5b Sl Class M N1_I (2011)'), ('5b_sl_n1_2', '5b SL Class N1_II (2011)'), ('5b_sl_n1_3_n2', '5b SL Class N1_III N2 (2011)'), ('6a_cl_mn1_1', '6a Cl Class M N1_I (2014)'), ('6a_cl_n1_2', '6a CL Class N1_II (2014)'), ('6a_cl_n1_3_n2', '6a CL Class N1_III N2 (2014)'), ('6a_sl_mn1_1', '6a Sl Class M N1_I (2014)'), ('6a_sl_n1_2', '6a SL Class N1_II (2014)'), ('6a_sl_n1_3_n2', '6a SL Class N1_III N2 (2014)')], max_length=15, verbose_name='Certification'),
        ),
        migrations.AlterField(
            model_name='emissions',
            name='eng_out',
            field=models.BooleanField(default=False, verbose_name='Engine out/Feedgas/Precat'),
        ),
        migrations.AlterField(
            model_name='emissions',
            name='regulation',
            field=models.CharField(choices=[('86', 'CFR 86'), ('1066', 'CFR 1066'), ('E3', 'Euro 3 (2000)'), ('E4', 'Euro 4 (2005)'), ('E5', 'Euro 5 (2009)'), ('E6b', 'Euro 6b (2014)'), ('E6c', 'Euro 6c'), ('E6d_T', 'Euro 6d TEMP (2017)'), ('E6d', 'Euro 6d (2020)')], max_length=5, verbose_name='Regulation'),
        ),
        migrations.AlterField(
            model_name='emissions',
            name='tail_post',
            field=models.BooleanField(default=False, verbose_name='Tailpipe/Postcat'),
        ),
        migrations.AlterField(
            model_name='requester',
            name='r_email',
            field=models.EmailField(blank=True, max_length=254, verbose_name="Requester's e-mail"),
        ),
        migrations.AlterField(
            model_name='requester',
            name='r_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Requester's phone number"),
        ),
        migrations.AlterField(
            model_name='requester',
            name='t_email',
            field=models.EmailField(blank=True, max_length=50, verbose_name="Tester's e-mail"),
        ),
        migrations.AlterField(
            model_name='requester',
            name='t_name',
            field=models.CharField(blank=True, max_length=50, verbose_name='Name of testing engineer'),
        ),
        migrations.AlterField(
            model_name='requester',
            name='t_phone',
            field=models.CharField(blank=True, max_length=12, verbose_name="Tester's phone number"),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='desc',
            field=models.CharField(blank=True, max_length=255, verbose_name='Additional notes'),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='front_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No')], max_length=10, verbose_name='Front tow hooks?'),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='inertia',
            field=models.BooleanField(default=False, verbose_name='Inertia table lookup?'),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='rear_hooks',
            field=models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No')], max_length=10, verbose_name='Rear tow hooks?'),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='test_mass_eu',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=12, verbose_name='Test mass (EU)'),
        ),
        migrations.AlterField(
            model_name='roadload',
            name='test_mass_usa',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=12, verbose_name='Test mass (EPA)'),
        ),
        migrations.AlterField(
            model_name='soaktag',
            name='customer',
            field=models.CharField(max_length=50, verbose_name='Customer'),
        ),
        migrations.AlterField(
            model_name='soaktag',
            name='identifier',
            field=models.CharField(blank=True, max_length=50, verbose_name='Additional Naming'),
        ),
        migrations.AlterField(
            model_name='soaktag',
            name='make',
            field=models.CharField(max_length=50, verbose_name='Make '),
        ),
        migrations.AlterField(
            model_name='soaktag',
            name='model',
            field=models.CharField(max_length=50, verbose_name='Model '),
        ),
        migrations.AlterField(
            model_name='soaktag',
            name='test_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Test Vehicle Naming'),
        ),
        migrations.AlterField(
            model_name='vehicleinfo',
            name='displacement',
            field=models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Engine Displacement'),
        ),
    ]
