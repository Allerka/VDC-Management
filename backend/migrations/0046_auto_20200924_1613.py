# Generated by Django 3.0.7 on 2020-09-24 20:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('backend', '0045_auto_20200923_1319'),
    ]

    operations = [
        migrations.AlterField(
            model_name='datahandler',
            name='status',
            field=models.CharField(blank=True, choices=[('SUBMIT', 'Submitted'), ('REJECT', 'Rejected'), ('PEND', 'Pending'), ('APPROVE', 'Approved')], default='SUBMIT', max_length=10, null=True, verbose_name='Current status of the vehicle entry'),
        ),
        migrations.CreateModel(
            name='HistoricalVehicleInfo',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('charge_num', models.CharField(blank=True, max_length=30, verbose_name='Complete project/charge #')),
                ('license', models.CharField(blank=True, max_length=10, verbose_name='Vehicle license #')),
                ('displacement', models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Engine Displacement')),
                ('cylinders', models.PositiveSmallIntegerField(verbose_name='Number of cylinders')),
                ('transmission', models.CharField(blank=True, max_length=10, verbose_name='Transmission type')),
                ('gears', models.PositiveSmallIntegerField(verbose_name='Number of gears')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical vehicle info',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSoakTag',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('year', models.PositiveSmallIntegerField(verbose_name='Model Year')),
                ('make', models.CharField(blank=True, max_length=50, verbose_name='Make ')),
                ('model', models.CharField(blank=True, max_length=50, verbose_name='Model ')),
                ('identifier', models.CharField(blank=True, max_length=50, verbose_name='Additional Naming')),
                ('color', models.CharField(blank=True, max_length=20, verbose_name='Exterior Color')),
                ('customer', models.CharField(blank=True, max_length=50, verbose_name='Customer')),
                ('test_name', models.CharField(blank=True, max_length=100, verbose_name='Test Vehicle Naming')),
                ('vin', models.CharField(blank=True, max_length=17, verbose_name='Vehicle VIN')),
                ('veh_type', models.CharField(blank=True, choices=[('ICE', 'Ice'), ('HEV (48V)', 'Hev 48'), ('HEV', 'Hev'), ('PHEV', 'Phev'), ('BEV', 'Bev'), ('None', 'None')], default='None', max_length=10, verbose_name='Vehicle type')),
                ('f_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Front tire pressure')),
                ('r_pressure', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Rear tire pressure')),
                ('fuel_type', models.CharField(blank=True, max_length=50, verbose_name='VDC fuel type')),
                ('fuel_type_other', models.CharField(blank=True, max_length=50, verbose_name='Other fuel type')),
                ('fuel_cap', models.DecimalField(blank=True, decimal_places=1, max_digits=4, verbose_name='Fuel capacity')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical soak tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRoadLoad',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('country', models.CharField(blank=True, choices=[('US', 'Us'), ('USM', 'US Metric'), ('EU', 'Eu'), ('GTR', 'GTR 15'), ('JPN', 'Japan 1015'), ('JC08', 'Japan JC08'), ('None', 'None')], default='', max_length=10, verbose_name='Country selection')),
                ('mass_usa', models.PositiveSmallIntegerField(blank=True, verbose_name='Mass (EPA)')),
                ('inertia', models.BooleanField(default=False, verbose_name='Inertia table lookup?')),
                ('test_mass_usa', models.DecimalField(blank=True, decimal_places=8, max_digits=12, verbose_name='Test mass (EPA)')),
                ('test_mass_eu', models.DecimalField(blank=True, decimal_places=6, max_digits=12, verbose_name='Test mass (EU)')),
                ('mass_ro', models.PositiveSmallIntegerField(blank=True, verbose_name='MassRO')),
                ('mass_coc', models.PositiveSmallIntegerField(blank=True, verbose_name='Mass #13 - 75kg')),
                ('coeff1', models.DecimalField(blank=True, decimal_places=4, max_digits=10, verbose_name='Target coeff A')),
                ('coeff2', models.DecimalField(blank=True, decimal_places=6, max_digits=10, verbose_name='Target coeff B')),
                ('coeff3', models.DecimalField(blank=True, decimal_places=7, max_digits=10, verbose_name='Target coeff C')),
                ('cold_co1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, verbose_name='Cold Target Coeff A')),
                ('cold_co2', models.DecimalField(blank=True, decimal_places=4, max_digits=10, verbose_name='Cold Target Coeff B')),
                ('cold_co3', models.DecimalField(blank=True, decimal_places=5, max_digits=10, verbose_name='Cold Target Coeff C')),
                ('wheelbase', models.PositiveSmallIntegerField(verbose_name='Wheelbase size')),
                ('dyno_mode', models.CharField(blank=True, choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='No', max_length=10, verbose_name='Dyno mode?')),
                ('coastdown', models.CharField(choices=[('Procedure', 'Yes, procedure attached'), ('Delivered', 'Yes, as delivered'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Coastdown mode?')),
                ('dyno_roll', models.CharField(choices=[('FWD', 'Fwd'), ('RWD', 'Rwd'), ('4WD', 'Awd'), ('', 'None')], default='', max_length=3, verbose_name='Dyno roll configuration')),
                ('d_rings', models.BooleanField(default=False, verbose_name='D-Rings present?')),
                ('front_hooks', models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Front tow hooks?')),
                ('front_alt', models.CharField(blank=True, max_length=50, verbose_name='Alternate front tie-down')),
                ('rear_hooks', models.CharField(blank=True, choices=[('Driver', 'Yes - Driver Side'), ('Passenger', 'Yes - Passenger Side'), ('Both', 'Yes - Both Sides'), ('Yes', 'Yes'), ('No', 'No'), ('None', 'None')], default='None', max_length=10, verbose_name='Rear tow hooks?')),
                ('rear_alt', models.CharField(blank=True, max_length=50, verbose_name='Alternate rear tie-down')),
                ('desc', models.CharField(blank=True, max_length=255, verbose_name='Additional notes')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical road load',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRequester',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('r_name', models.CharField(max_length=50, verbose_name='Name of requester')),
                ('r_email', models.EmailField(blank=True, max_length=254, verbose_name="Requester's e-mail")),
                ('r_phone', models.CharField(blank=True, max_length=12, verbose_name="Requester's phone number")),
                ('r_mobile', models.CharField(blank=True, max_length=12, verbose_name="Requester's mobile (if different)")),
                ('t_name', models.CharField(blank=True, max_length=50, verbose_name='Name of testing engineer')),
                ('t_email', models.EmailField(blank=True, max_length=50, verbose_name="Tester's e-mail")),
                ('t_phone', models.CharField(blank=True, max_length=12, verbose_name="Tester's phone number")),
                ('date', models.DateField(blank=True, editable=False, verbose_name='Request submission date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical requester',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmissions',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('regulation', models.CharField(blank=True, choices=[('86', 'CFR 86'), ('1066', 'CFR 1066'), ('E3', 'Euro 3 (2000)'), ('E4', 'Euro 4 (2005)'), ('E5', 'Euro 5 (2009)'), ('E6b', 'Euro 6b (2014)'), ('E6c', 'Euro 6c'), ('E6d_T', 'Euro 6d TEMP (2017)'), ('E6d', 'Euro 6d (2020)'), ('None', 'None')], max_length=5, verbose_name='Regulation')),
                ('cert_level', models.CharField(blank=True, choices=[('bin2', 'EPA Tier 2 Bin 2 (2004)'), ('bin3', 'EPA Tier 2 Bin 3 (2004)'), ('bin4', 'EPA Tier 2 Bin 4 (2004)'), ('bin5', 'EPA Tier 2 Bin 5 (2004)'), ('bin5_int', 'EPA Tier 2 Bin 5 Int (2004)'), ('bin6', 'EPA Tier 2 Bin 6 (2004)'), ('bin6_int', 'EPA Tier 2 Bin 6 Int (2004)'), ('bin7', 'EPA Tier 2 Bin 7 (2004)'), ('bin7_int', 'EPA Tier 2 Bin 7 Int (2004)'), ('bin8', 'EPA Tier 2 Bin 8 (2004)'), ('bin8_int', 'EPA Tier 2 Bin 8 Int'), ('bin20', 'EPA Tier 3 Bin 20 (2017)'), ('bin30', 'EPA Tier 3 Bin 30 (2017)'), ('bin50', 'EPA Tier 3 Bin 50 (2017)'), ('bin70', 'EPA Tier 3 Bin 70 (2017)'), ('bin125', 'EPA Tier 3 Bin 125 (2017)'), ('bin160', 'EPA Tier 3 Bin 160 (2017)'), ('e3_cl_m1', 'Cl Class M1 (2000)'), ('e3_cl_n1_1', 'CL Class N1_I (2000)'), ('e3_cl_n1_2', 'CL Class N1_II (2000)'), ('e3_cl_n1_3', 'CL Class N1_III (2000)'), ('e3_pl_m1', 'Pl Class M1 (2000)'), ('e3_pl_n1_1', 'PL Class N1_I (2000)'), ('e3_pl_n1_2', 'PL Class N1_II (2000)'), ('e3_pl_n1_3', 'PL Class N1_III (2000)'), ('e4_cl_m1', 'Cl Class M1 (2005)'), ('e4_cl_n1_1', 'CL Class N1_I (2005)'), ('e4_cl_n1_2', 'CL Class N1_II (2005)'), ('e4_cl_n1_3', 'CL Class N1_III (2005)'), ('e4_pl_m1', 'PL Class M1 (2005)'), ('e4_pl_n1_1', 'PL Class N1_I (2005)'), ('e4_pl_n1_2', 'PL Class N1_II (2005)'), ('e4_pl_n1_3', 'PL Class N1_III (2005)'), ('5a_cl_mn1_1', '5a Cl Class M N1_I (2009)'), ('5a_cl_n1_2', '5a CL Class N1_II (2009)'), ('5a_cl_n1_3_n2', '5a CL Class N1_III N2 (2009)'), ('5a_sl_mn1_1', '5a Sl Class M N1_I (2009)'), ('5a_sl_n1_2', '5a SL Class N1_II (2009)'), ('5a_sl_n1_3_n2', '5a SL Class N1_III N2 (2009)'), ('5b_cl_mn1_1', '5b Cl Class M N1_I (2011)'), ('5b_cl_n1_2', '5b CL Class N1_II (2011)'), ('5b_cl_n1_3_n2', '5b CL Class N1_III N2 (2011)'), ('5b_sl_mn1_1', '5b Sl Class M N1_I (2011)'), ('5b_sl_n1_2', '5b SL Class N1_II (2011)'), ('5b_sl_n1_3_n2', '5b SL Class N1_III N2 (2011)'), ('6a_cl_mn1_1', '6a Cl Class M N1_I (2014)'), ('6a_cl_n1_2', '6a CL Class N1_II (2014)'), ('6a_cl_n1_3_n2', '6a CL Class N1_III N2 (2014)'), ('6a_sl_mn1_1', '6a Sl Class M N1_I (2014)'), ('6a_sl_n1_2', '6a SL Class N1_II (2014)'), ('6a_sl_n1_3_n2', '6a SL Class N1_III N2 (2014)'), ('None', 'None')], max_length=15, verbose_name='Certification')),
                ('eng_family', models.CharField(blank=True, max_length=100, verbose_name='Engine family')),
                ('emi_family', models.CharField(blank=True, max_length=100, verbose_name='Emission family')),
                ('eng_out', models.BooleanField(default=False, verbose_name='Engine out/Feedgas/Precat')),
                ('cat_mid', models.BooleanField(default=False, verbose_name='Catalyst Midbed')),
                ('tail_post', models.BooleanField(default=False, verbose_name='Tailpipe/Postcat')),
                ('marmon', models.DecimalField(blank=True, decimal_places=1, max_digits=2, verbose_name='Marmon flange size')),
                ('marmon_distance', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Dual flange distance')),
                ('usable_bat', models.PositiveSmallIntegerField(blank=True, verbose_name='Usable battery energy')),
                ('nom_bat', models.PositiveSmallIntegerField(blank=True, verbose_name='Nominal battery voltage')),
                ('all_range', models.PositiveSmallIntegerField(blank=True, verbose_name='All-electric range')),
                ('cscm', models.PositiveSmallIntegerField(blank=True, verbose_name='CSCm Distance')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical emissions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataHandler',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('upload', models.TextField(blank=True, max_length=100)),
                ('status', models.CharField(blank=True, choices=[('SUBMIT', 'Submitted'), ('REJECT', 'Rejected'), ('PEND', 'Pending'), ('APPROVE', 'Approved')], default='SUBMIT', max_length=10, null=True, verbose_name='Current status of the vehicle entry')),
                ('anyone', models.BooleanField(default=True, verbose_name='Can any FEV employee see this vehicle?')),
                ('staff', models.BooleanField(default=True, verbose_name="Can 'is_staff' users (VDC team) see this vehicle?")),
                ('superuser', models.BooleanField(default=True, verbose_name="Can 'superuser' (Admins) users see this vehicle?")),
                ('active', models.BooleanField(default=True, verbose_name='Active entry?')),
                ('updated', models.DateField(blank=True, editable=False, verbose_name='Last updated')),
                ('deleted_at', models.DateField(blank=True, null=True, verbose_name='Entry soft-delete date')),
                ('deleted_by', models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('emissions', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.Emissions')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.Requester')),
                ('road_load', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.RoadLoad')),
                ('soak_tag', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.SoakTag')),
                ('vehicle_info', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='backend.VehicleInfo')),
            ],
            options={
                'verbose_name': 'historical data handler',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
