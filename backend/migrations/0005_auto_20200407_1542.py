# Generated by Django 3.0.3 on 2020-04-07 15:42

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0004_auto_20200406_1606'),
    ]

    operations = [
        migrations.CreateModel(
            name='Emissions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('regulation', models.CharField(choices=[('86', 'Cfr86'), ('1066', 'Cfr1066'), ('E3', 'Euro3'), ('E4', 'Euro4'), ('E5', 'Euro5'), ('E6b', 'Euro6B'), ('E6c', 'Euro6C'), ('E6d_T', 'Euro6D Temp'), ('E6d', 'Euro6D')], max_length=5, verbose_name='Regulation')),
                ('cert_level', models.CharField(choices=[('EPA Tier 2', (('bin2', 'Tier 2 Bin 2'), ('bin3', 'Tier 2 Bin 3'), ('bin4', 'Tier 2 Bin 4'), ('bin5', 'Tier 2 Bin 5'), ('bin6', 'Tier 2 Bin 6'), ('bin6_int', 'Tier 2 Bin 6 Int'), ('bin7', 'Tier 2 Bin 7'), ('bin7_int', 'Tier 2 Bin 7 Int'), ('bin8', 'Tier 2 Bin 8'), ('bin8_int', 'Tier 2 Bin 8 Int'))), ('EPA Tier 3', (('bin20', 'Tier 3 Bin 20'), ('bin30', 'Tier 3 Bin 30'), ('bin50', 'Tier 3 Bin 50'), ('bin70', 'Tier 3 Bin 70'), ('bin125', 'Tier 3 Bin 125'), ('bin160', 'Tier 3 Bin 160'))), ('Euro 3', (('cl_m1', 'Cl Class M1'), ('cl_n1_1', 'CL Class N1_I'), ('cl_n1_2', 'CL Class N1_II'), ('cl_n1_3', 'CL Class N1_III'), ('pl_m1', 'Pl Class M1'), ('pl_n1_1', 'PL Class N1_I'), ('pl_n1_2', 'PL Class N1_II'), ('pl_n1_3', 'PL Class N1_III'))), ('Euro 4', (('cl_m1', 'Cl Class M1'), ('cl_n1_1', 'CL Class N1_I'), ('cl_n1_2', 'CL Class N1_II'), ('cl_n1_3', 'CL Class N1_III'), ('pl_m1', 'Pl Class M1'), ('pl_n1_1', 'PL Class N1_I'), ('pl_n1_2', 'PL Class N1_II'), ('pl_n1_3', 'PL Class N1_III'))), ('Euro 5', (('5a_cl_mn1_1', '5a Cl Class M N1_I'), ('5a_cl_n1_2', '5a CL Class N1_II'), ('5a_cl_n1_3_n2', '5a CL Class N1_III N2'), ('5a_sl_mn1_1', '5a Sl Class M N1_I'), ('5a_sl_n1_2', '5a SL Class N1_II'), ('5a_sl_n1_3_n2', '5a SL Class N1_III N2'), ('5b_cl_mn1_1', '5b Cl Class M N1_I'), ('5b_cl_n1_2', '5b CL Class N1_II'), ('5b_cl_n1_3_n2', '5b CL Class N1_III N2'), ('5b_sl_mn1_1', '5b Sl Class M N1_I'), ('5b_sl_n1_2', '5b SL Class N1_II'), ('5b_sl_n1_3_n2', '5b SL Class N1_III N2'))), ('Euro 6', (('6a_cl_mn1_1', '6a Cl Class M N1_I'), ('6a_cl_n1_2', '6a CL Class N1_II'), ('6a_cl_n1_3_n2', '6a CL Class N1_III N2'), ('6a_sl_mn1_1', '6a Sl Class M N1_I'), ('6a_sl_n1_2', '6a SL Class N1_II'), ('6a_sl_n1_3_n2', '6a SL Class N1_III N2')))], max_length=15, verbose_name='Certification')),
                ('eng_family', models.CharField(blank=True, max_length=100, verbose_name='Engine family')),
                ('emi_family', models.CharField(blank=True, max_length=100, verbose_name='Emission family')),
                ('eng_out', models.BooleanField(verbose_name='Engine out/Feedgas/Precat')),
                ('cat_mid', models.BooleanField(verbose_name='Catalyst Midbed')),
                ('tail_post', models.BooleanField(verbose_name='Tailpipe/Postcat')),
                ('marmon', models.DecimalField(choices=[(2, '2'), (2.5, '2.5'), (3, '3'), (4, '4')], decimal_places=1, max_digits=2, verbose_name='Marmon flange size')),
                ('marmon_distance', models.PositiveSmallIntegerField(blank=True, verbose_name='Dual flange distance')),
                ('usable_bat', models.PositiveSmallIntegerField(blank=True, verbose_name='Usable battery energy')),
                ('nom_bat', models.PositiveSmallIntegerField(blank=True, verbose_name='Nominal battery voltage')),
                ('all_range', models.PositiveSmallIntegerField(blank=True, verbose_name='All-electric range')),
                ('updated', models.DateField(auto_now=True, verbose_name='Last updated')),
                ('active', models.BooleanField(default=True, verbose_name='Visible entry?')),
                ('deleted_at', models.DateField(auto_now=True, verbose_name='Entry soft-delete date')),
                ('deleted_by', models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry')),
            ],
        ),
        migrations.CreateModel(
            name='RoadLoad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('test_mass_usa', models.PositiveSmallIntegerField(blank=True, verbose_name='Test mass (EPA)')),
                ('test_mass_eu', models.PositiveSmallIntegerField(blank=True, verbose_name='Test mass (EU)')),
                ('mass_ro', models.PositiveSmallIntegerField(blank=True, verbose_name='MassRO')),
                ('mass_coc', models.PositiveSmallIntegerField(blank=True, verbose_name='Mass #13 - 75kg')),
                ('coeff1', models.PositiveSmallIntegerField(blank=True, verbose_name='Target coeff A')),
                ('coeff2', models.PositiveSmallIntegerField(blank=True, verbose_name='Target coeff B')),
                ('coeff3', models.PositiveSmallIntegerField(blank=True, verbose_name='Target coeff C')),
                ('cold_co1', models.DecimalField(blank=True, decimal_places=5, max_digits=10, verbose_name='Cold Target Coeff A')),
                ('cold_co2', models.DecimalField(blank=True, decimal_places=5, max_digits=10, verbose_name='Cold Target Coeff B')),
                ('cold_co3', models.DecimalField(blank=True, decimal_places=5, max_digits=10, verbose_name='Cold Target Coeff C')),
                ('wheelbase', models.PositiveSmallIntegerField(verbose_name='Wheelbase size')),
                ('dyno_mode', models.BooleanField(verbose_name='Dyno mode?')),
                ('coastdown', models.BooleanField(verbose_name='Coastdown mode?')),
                ('dyno_roll', models.CharField(choices=[('FWD', 'Fwd'), ('RWD', 'Rwd'), ('AWD', 'Awd')], max_length=3, verbose_name='Dyno roll configuration')),
                ('d_rings', models.BooleanField(verbose_name='D-Rings present?')),
                ('front_hooks', models.BooleanField(verbose_name='Front tow hooks?')),
                ('front_alt', models.CharField(blank=True, max_length=50, verbose_name='Alternate front tie-down')),
                ('rear_hooks', models.BooleanField(verbose_name='Rear tow hooks?')),
                ('rear_alt', models.CharField(blank=True, max_length=50, verbose_name='Alternate rear tie-down')),
                ('desc', models.CharField(blank=True, max_length=100, verbose_name='Additional notes')),
                ('updated', models.DateField(auto_now=True, verbose_name='Last updated')),
                ('active', models.BooleanField(default=True, verbose_name='Visible entry?')),
                ('deleted_at', models.DateField(auto_now=True, verbose_name='Entry soft-delete date')),
                ('deleted_by', models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry')),
            ],
        ),
        migrations.CreateModel(
            name='SoakTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('year', models.PositiveSmallIntegerField(verbose_name='Model Year')),
                ('make', models.CharField(max_length=50, verbose_name='Vehicle Manufacturer')),
                ('model', models.CharField(max_length=50, verbose_name='Vehicle Model')),
                ('identifier', models.CharField(blank=True, max_length=50, verbose_name='Special identifier')),
                ('color', models.CharField(max_length=20, verbose_name='Exterior Color')),
                ('customer', models.CharField(max_length=50, verbose_name='Customer company')),
                ('test_name', models.CharField(blank=True, max_length=100, verbose_name='Test vehicle naming')),
                ('vin', models.CharField(max_length=17, verbose_name='Vehicle VIN')),
                ('veh_type', models.CharField(choices=[('ICE', 'Ice'), ('HEV (48V)', 'Hev 48'), ('HEV', 'Hev'), ('PHEV', 'Phev'), ('BEV', 'Bev')], max_length=10, verbose_name='Vehicle type')),
                ('f_pressure', models.PositiveSmallIntegerField(blank=True, verbose_name='Front tire pressure')),
                ('r_pressure', models.PositiveSmallIntegerField(blank=True, verbose_name='Rear tire pressure')),
                ('fuel_type', models.CharField(max_length=50, verbose_name='VDC fuel type')),
                ('fuel_type_other', models.CharField(blank=True, max_length=50, verbose_name='Other fuel type')),
                ('fuel_cap', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='Fuel capacity')),
                ('updated', models.DateField(auto_now=True, verbose_name='Last updated')),
                ('active', models.BooleanField(default=True, verbose_name='Visible entry?')),
                ('deleted_at', models.DateField(auto_now=True, verbose_name='Entry soft-delete date')),
                ('deleted_by', models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry')),
            ],
        ),
        migrations.DeleteModel(
            name='DynoParameters',
        ),
        migrations.DeleteModel(
            name='FinalInfo',
        ),
        migrations.DeleteModel(
            name='FuelInfo',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='color',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='dpf',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='drivetrain',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='f_pressure',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='family',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='fuel_cap',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='identifier',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='legislation',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='manufacturer',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='model',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='power',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='r_pressure',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='spin',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='units',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='vin',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='wheelbase',
        ),
        migrations.RemoveField(
            model_name='vehicleinfo',
            name='year',
        ),
        migrations.AddField(
            model_name='requester',
            name='deleted_at',
            field=models.DateField(auto_now=True, verbose_name='Entry soft-delete date'),
        ),
        migrations.AddField(
            model_name='requester',
            name='deleted_by',
            field=models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry'),
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='charge_num',
            field=models.CharField(blank=True, max_length=20, verbose_name='Complete project/charge #'),
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='cylinders',
            field=models.PositiveSmallIntegerField(default=1, verbose_name='Number of cylinders'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='deleted_at',
            field=models.DateField(auto_now=True, verbose_name='Entry soft-delete date'),
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='deleted_by',
            field=models.CharField(blank=True, max_length=50, verbose_name='User who deleted the entry'),
        ),
        migrations.AddField(
            model_name='vehicleinfo',
            name='gears',
            field=models.PositiveSmallIntegerField(default=1, verbose_name='Number of gears'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='vehicleinfo',
            name='displacement',
            field=models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Engine Displacement'),
        ),
        migrations.AlterField(
            model_name='vehicleinfo',
            name='transmission',
            field=models.CharField(max_length=10, verbose_name='Transmission type'),
        ),
    ]
